/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	eval("var formdata = __webpack_require__(1);\nvar createform = __webpack_require__(2);\n\ncreateform.init(formdata);\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app.js\n ** module id = 0\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/scripts/app.js?");

/***/ },
/* 1 */
/***/ function(module, exports) {

	eval("module.exports = {\n    id: \"testform\",\n    title: \"Sign up for our paid opinion panel\",\n    description: \"Become a member of our panel of people interested in getting paid for their opinions.\",\n    action: '',\n    sections: [{\n        id: 1,\n        title: null,\n        fields: [{\n            id: 1,\n            name: \"Name\",\n            required: true,\n            type: \"label\",\n            subfields: [{\n                name: \"First\",\n                label: \"First\",\n                required: true,\n                type: \"text\"\n            },{\n                name: \"Last\",\n                label: \"Last\",\n                required: true,\n                type: \"text\"\n            }]   \n        },{\n            id: 2,\n            name: \"Date of Birth\",\n            required: true,\n            type: \"label\",\n            subfields: [{\n                name: \"Month\",\n                required: true,\n                type: 'select',\n                options:[{\n                    value: '',\n                    label: 'Month'\n                }]\n            },{\n                name: \"Day\",\n                required: true,\n                type: 'select',\n                options:[{\n                    value: '',\n                    label: 'Day'\n                }]\n            },{\n                name: \"Year\",\n                required: true,\n                type: 'select',\n                options:[{\n                    value: '',\n                    label: 'Year'\n                }]\n            }]\n        },{\n            id: 3, \n            name: \"Gender\",\n            required: true,\n            type: \"radio\",\n            options:[{\n                value: \"Male\",\n                selected: false,\n            },{\n                value: \"Female\",\n                selected: false,\n            },{\n                value: \"Other\",\n                selected: true\n            }]\n        },{\n            id: 4,\n            name: \"Ethnicity\",\n            type: \"select\",\n            required: true,\n            options: [{\n                value: \"African American\"\n            },{\n                value: \"Asian, Pacific Island\"\n            },{\n                value: \"Caucasian\"\n            },{\n                value: \"Hispanic\"\n            },{\n                value: \"Native American\"\n            },{\n                value: \"Other\",\n                selected: true\n            }]\n        },{\n            id: 5,\n            name: \"Marital Status\",\n            type: \"select\", \n            required: true,\n            options:[{\n                value: \"Divorced/Seperated\"\n            },{\n                value: \"Married\"\n            },{\n                value: \"Partnered\"\n            },{\n                value: \"Single\",\n                selected: true\n            },{\n                value: \"Widowed\"\n            }]\n        },{\n            id: 6,\n            name: \"Housing\",\n            type: \"select\",\n            required: true,\n            options: [{\n                value: \"Own\"\n            },{\n                value: \"Rent\"\n            },{\n                value: \"Live w/Parents\"\n            }]\n        }]\n    },{\n        id: 2,\n        title: \"Contact Information\",\n        fields:[{\n            id: 1,\n            name: 'Home Address',\n            required: true,\n            type: 'label',\n            subfields:[{\n                name: 'Street Address',\n                className: 'full-width',\n                required: true,\n                type: 'text'\n            },{\n                name: 'City',\n                required: true,\n                type: 'text'\n            },{\n                name: 'State',\n                label: 'State', // states label to be used by select field\n                required: true,\n                type: 'select',\n                options: [{\n                    value: 'AL'\n                },{\n                    value: 'AK'\n                },{\n                    value: 'AZ'\n                },{\n                    value: 'AR'\n                },{\n                    value: 'CA'\n                },{\n                    value: 'CO'\n                },{\n                    value: 'CT'\n                },{\n                    value: 'DE'\n                },{\n                    value: 'FL'\n                },{\n                    value: 'GA'\n                },{\n                    value: 'HI'\n                },{\n                    value: 'ID'\n                },{\n                    value: 'IL'\n                },{\n                    value: 'IN'\n                },{\n                    value: 'IA'\n                },{\n                    value: 'KS'\n                },{\n                    value: 'KY'\n                },{\n                    value: 'LA'\n                },{\n                    value: 'ME'\n                },{\n                    value: 'MD'\n                },{\n                    value: 'MA'\n                },{\n                    value: 'MI'\n                },{\n                    value: 'MN'\n                },{\n                    value: 'MS'\n                },{\n                    value: 'MO'\n                },{\n                    value: 'MT'\n                },{\n                    value: 'NE'\n                },{\n                    value: 'NV'\n                },{\n                    value: 'NH'\n                },{\n                    value: 'NJ'\n                },{\n                    value: 'NM'\n                },{\n                    value: 'NY'\n                },{\n                    value: 'NC'\n                },{\n                    value: 'ND'\n                },{\n                    value: 'OH'\n                },{\n                    value: 'OK'\n                },{\n                    value: 'OR'\n                },{\n                    value: 'PA'\n                },{\n                    value: 'RI'\n                },{\n                    value: 'SC'\n                },{\n                    value: 'SD'\n                },{\n                    value: 'TN'\n                },{\n                    value: 'TX'\n                },{\n                    value: 'UT'\n                },{\n                    value: 'VT'\n                },{\n                    value: 'VA'\n                },{\n                    value: 'WA'\n                },{\n                    value: 'WV'\n                },{\n                    value: 'WI'\n                },{\n                    value: 'WY'\n                }]\n            },{\n                name: 'Zip Code',\n                required: true,\n                type: 'text'\n            }]\n        },{\n            id: 2,\n            name: 'My primary contact number is a:',\n            type: 'select',\n            required: true,\n            options: [{\n                value: 'Home Phone',\n            },{\n                value: 'Work Phone'\n            },{\n                value: 'Mobile Phone'\n            }],\n            relation: {\n                type: 'update',\n                target: 'phone-input'\n            }\n        },{\n            id: 3,\n            name: 'Home Phone',\n            required: true,\n            type: 'tel',\n            uid: 'phone-input',\n            placeholder: 'xxx-xxx-xxxx'\n        },{\n            id: 4,\n            name: 'Email',\n            required: true,\n            type: 'label',\n            subfields: [{\n                name: 'Enter Email',\n                type: 'email',\n                required: true,\n                uid: 'email-input'\n            }, {\n                name: 'Confirm Email',\n                type: 'text',\n                required: true,\n                relation: {\n                    type: 'confirm',\n                    target: 'email-input'\n                }\n            }]\n        }]\n    },{\n        id: 3,\n        title: \"Employment\",\n        fields: [{\n            id: 1,\n            name: 'Employment Status',\n            required: true,\n            type: 'select',\n            options: [{\n                value: 'Full Time'\n            },{\n                value: 'Part Time'\n            },{\n                value: 'Student'\n            },{\n                value: 'Homemaker'\n            },{\n                value: 'Retired'\n            },{\n                value: 'Unemployed'\n            }]\n        },{\n            id: 2,\n            name: 'Are you Self Employed?',\n            type: 'select',\n            options: [{\n                value: 'No'\n            },{\n                value: 'Yes'\n            }]\n        },{\n            id: 3,\n            name: 'Job Title',\n            type: 'text'\n        },{\n            id: 4,\n            name: 'Employment',\n            type: 'text'\n        },{\n            id: 5,\n            name: 'Industry',\n            type: 'select',\n            options: [{\n                value: 'Accounting/Finance'\n            },{\n                value: 'Advertising/Public Relations'\n            },{\n                value: 'Aerospace/Aviation'\n            },{\n                value: 'Arts/Entertainment/Publishing'\n            },{\n                value: 'Automotive'\n            },{\n                value: 'Banking/Mortgage'\n            },{\n                value: 'Business Development'\n            },{\n                value: 'Business Opportunity'\n            },{\n                value: 'Clerical/Administrative'\n            },{\n                value: 'Construction/Facilities'\n            },{\n                value: 'Consumer Goods'\n            }, {\n                value: 'Customer Service'\n            },{\n                value: 'Education/Training'\n            },{\n                value: 'Energy/Utilities'\n            },{\n                value: 'Engineering'\n            },{\n                value: 'Government/Military'\n            },{\n                value: 'Green'\n            }, {\n                value: 'Healthcare'\n            },{\n                value: 'Hospitality/Travel'\n            },{\n                value:'Human Resources'\n            },{\n                value: 'Installation/Maintenance'\n            },{\n                value: 'Insurance'\n            },{\n                value: 'Internet'\n            },{\n                value: 'Job Search Aids'\n            },{\n                value: 'Law Enforcement/Security'\n            },{\n                value: 'Legal'\n            },{\n                value: 'Management/Executive'\n            },{\n                value: 'Manufacturing/Operations'\n            },{\n                value: 'Marketing'\n            },{\n                value: 'Non-Profit/Volunteer'\n            },{\n                value: 'Pharmaceutical/Biotech'\n            },{\n                value: 'Professional Services'\n            },{\n                value: 'QA/Quality Control'\n            },{\n                value: 'Real Estate'\n            },{\n                value: 'Restaurant/Food Service'\n            },{\n                value:'Retail'\n            },{\n                value:'Sales'\n            },{\n                value: 'Science/Research'\n            },{\n                value: 'Skilled Labor'\n            },{\n                value:'Technology'\n            },{\n                value:'Telecommunications'\n            },{\n                value:'Transportation/Logistics'\n            },{\n                value:'Other'\n            }]\n        },{\n            id: 6,\n            name: 'Number of Employees (locally)',\n            type: 'select',\n            options: [{\n                value: 'Less than 10'\n            },{\n                value:'10-49'\n            },{\n                value: '50-99'\n            },{\n                value: '100-499'\n            },{\n                value: '500-999'\n            },{\n                value: '1000-1999'\n            },{\n                value: '2000+'\n            }]\n        }]\n    },{\n        id: 4,\n        title: \"Children\",\n        fields: [{\n            name: 'Number of Children Living in the Home Under the Age of 21',\n            type: 'select',\n            options: [{\n                value: 0,\n            },{\n                value: 1,\n            },{\n                value: 2\n            },{\n                value: 3\n            },{\n                value: 4,\n                label: '4+'\n            }],\n            relation: {\n                type: 'insert',\n                target: '.child-info'\n            }\n        },{\n            name: \"Children's Information\",\n            type: 'label',\n            classNames: 'child-info hide',\n            subfields: [{\n                name: 'Child 1\\'s Name',\n                label: 'Name',\n                type: 'text',\n            },{\n                name: 'child 1 - dob - month',\n                label: 'Date of Birth',\n                type: 'select',\n                options: [{\n                    value: '',\n                    label: 'Month'\n                }]\n            },{\n                name: 'child 1 - dob - day',\n                type: 'select',\n                options: [{\n                    value: '',\n                    label: 'Day'\n                }]\n            },{\n                name: 'child 1 - dob - year',\n                type: 'select',\n                options: [{\n                    value: '',\n                    label: 'Year'\n                }]\n            }]\n        },{\n            name: '',\n            type: 'label',\n            classNames: 'child-info hide',\n            subfields: [{\n                name: 'Child 2\\'s Name',\n                label: 'Name',\n                type: 'text',\n            },{\n                name: 'child 2 - dob - month',\n                label: 'Date of Birth',\n                type: 'select',\n                options: [{\n                    value: '',\n                    label: 'Month'\n                }]\n            },{\n                name: 'child 2 - dob - day',\n                type: 'select',\n                options: [{\n                    value: '',\n                    label: 'Day'\n                }]\n            },{\n                name: 'child 2 - dob - year',\n                type: 'select',\n                options: [{\n                    value: '',\n                    label: 'Year'\n                }]\n            }]\n        },{\n            name: '',\n            type: 'label',\n            classNames: 'child-info hide',\n            subfields: [{\n                name: 'Child 3\\'s Name',\n                type: 'text',\n                label: 'Name'\n            },{\n                name: 'child 3 - dob - month',\n                label: 'Date of Birth',\n                type: 'select',\n                options: [{\n                    value: '',\n                    label: 'Month'\n                }]\n            },{\n                name: 'child 3 - dob - day',\n                type: 'select',\n                options: [{\n                    value: '',\n                    label: 'Day'\n                }]\n            },{\n                name: 'child 3 - dob - year',\n                type: 'select',\n                options: [{\n                    value: '',\n                    label: 'Year'\n                }]\n            }]\n        },{\n            name: '',\n            type: 'label',\n            classNames: 'child-info hide',\n            subfields: [{\n                name: 'Child 4\\'s Name',\n                type: 'text',\n                label: 'Name',\n            },{\n                name: 'child 4 - dob - month',\n                label: 'Date of Birth',\n                type: 'select',\n                options: [{\n                    value: '',\n                    label: 'Month'\n                }]\n            },{\n                name: 'child 4 - dob - day',\n                type: 'select',\n                options: [{\n                    value: '',\n                    label: 'Day'\n                }]\n            },{\n                name: 'child 4 - dob - year',\n                type: 'select',\n                options: [{\n                    value: '',\n                    label: 'Year'\n                }]\n            }]\n        }]\n    },{\n        id: 5,\n        title: \"Demographics\",\n        fields: [{\n            name: 'Highest Level of Education',\n            type: 'select',\n            options: [{\n                value: 'Less than High School'\n            },{\n                value:'High School Grad/GED'\n            },{\n                value:'Some College'\n            },{\n                value:'Associates Degree 2 Yr'\n            },{\n                value:'Trade Degree/Cert.'\n            },{\n                value:'College Grad'\n            },{\n                value:'Master\\'s Degree'\n            },{\n                value:'PhD'\n            }]\n        },{\n            name: 'Houshold Income',\n            type: 'select', \n            options: [{\n                value: 'Less than $10,000'\n            },{\n                value:'$10 - 20K'\n            },{\n                value:'$20 - 30K'\n            },{\n                value:'$30 - 40K'\n            },{\n                value:'$40 - 50K'\n            },{\n                value:'$50 - 75K'\n            },{\n                value:'$75 - 100K'\n            },{\n                value:'$100 - $125K'\n            },{\n                value:'$125 - 150K'\n            },{\n                value:'$150K+'\n            }]\n        }]\n    },{\n        id: 6,\n        title: \"Referral Information\",\n        fields: [{\n            name: 'Home did you learn about us?',\n            type: 'select',\n            options: [{\n                value: 'Phone call',\n            },{\n                value: 'Email'\n            },{\n                value: 'Friend or Family'\n            },{\n                value: 'Flyer'\n            },{\n                value: 'Online Classified'\n            },{\n                value: 'Newspaper Ad'\n            },{\n                value: 'Internet Search'\n            },{\n                value: 'Other'\n            }]\n        }]\n    },{\n        id: 7,\n        title: \"Primary area of interest (subject to verification)\",\n        fields: [{\n            name: 'Panel Profile',\n            type: 'radio',\n            required: true,\n            options: [{\n                value: 'General/Consumer'\n            },{\n                value: 'IT Pro/Developer'\n            },{\n                value: 'Medical Professional'\n            }]\n        }]\n    },{\n        id: 8,\n        title: \"Pariticipation agreement\",\n        fields: [{\n            name: 'Permission to Contact',\n            description: 'I hereby grant you permission to contact me to verify my information or about match me to paid opportunities to give my opinion.',\n            type: 'checkbox',\n            required: true,\n            options: [{\n                value: 'I agree'\n            }]\n        }]\n    }]\n}\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/form.js\n ** module id = 1\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/scripts/form.js?");

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	eval("var createDefaultField = __webpack_require__(3);\n\nmodule.exports = {\n    init: function (formdata) {\n        // body...\n        var formHtml = this.createWrapper(formdata);\n\n        formHtml.appendChild(this.createForm(formdata));\n\n        // TODO: REFACTOR THIS to append wrapper to user's need\n        document.getElementsByTagName('body')[0].appendChild(formHtml);\n    },\n    createWrapper: function (formdata) {\n        // create the wrapper for the form \n        var formWrapper = document.createElement('div');\n        formWrapper.id = formdata.id;\n        formWrapper.className = 'bform-wrapper';\n        \n        return formWrapper;\n    },\n    createHeader: function (formdata) {\n        // Create form header\n        var header = document.createElement('section');\n        var h1 = document.createElement('h1');\n        var p = document.createElement('p');\n\n        h1.innerHTML = formdata.title;\n        h1.className = 'bform-header__title';\n        p.innerHTML = formdata.description;\n        p.className = 'bform-header__description';\n\n        header.className = 'bform-header';\n        header.appendChild(h1);\n        header.appendChild(p);\n\n        return header;\n    },\n    createSectionHeader: function (section, parent) {\n        // create section header\n        if(section.title){\n            var h2 = document.createElement('h2');\n            h2.className = 'bform-section__header';\n            h2.innerHTML = section.title;\n            parent.appendChild(h2);\n        }\n\n        if(section.description){\n            var p = document.createElement('p');\n            p.className = 'bform-section__description';\n            p.innerHTML = section.description;\n            parent.appendChild(p);\n        }\n    },\n    createForm: function (formdata) {\n        // create the overall structure of the form\n        var f = document.createElement('form');\n        var sections = formdata.sections;\n        var header = this.createHeader(formdata);\n        var that = this;\n        \n        f.className = \"bform\";\n        f.appendChild(header);\n\n        sections.forEach(function(section, index){\n            var sectionHTML = document.createElement('ul');\n            \n            sectionHTML.className = 'bform-section';\n\n            // Add section title\n            that.createSectionHeader(section, sectionHTML);\n\n            if(section.fields){\n                section.fields.forEach(function (field, index) {\n                    // append child field sections\n                    sectionHTML.appendChild(createDefaultField.create(field));\n                })\n            }\n            \n            \n            f.appendChild(sectionHTML);\n        })\n\n        var submitButton = document.createElement('button');\n        submitButton.type = 'submit';\n        submitButton.className = 'btn';\n        submitButton.innerHTML = 'Submit';\n        submitButton.id = 'submit';\n\n        f.appendChild(submitButton);\n\n        f.method = 'POST';\n        f.action = formdata.action;\n        \n        return f;\n    }\n}\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/createform.js\n ** module id = 2\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/scripts/createform.js?");

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	eval("var validateForm = __webpack_require__(4);\n\nmodule.exports={\n    create: function (fieldata) {\n        // init & field create function text fields\n        var field = this.createWrapper(fieldata);\n        var that = this;\n        \n        if(fieldata.name){\n            field.appendChild(that.createLabel(fieldata));\n        }\n\n        if(fieldata.description){\n            field.appendChild(that.createDescription(fieldata));\n        }\n        \n        if(fieldata.type === 'text' || fieldata.type === 'email' || fieldata.type == 'tel'){\n            field.appendChild(that.createInputField(fieldata));\n        }else if(fieldata.type === 'select'){\n            field.appendChild(that.createSelectField(fieldata));\n        }else if(fieldata.type === 'radio' || fieldata.type === 'checkbox'){\n            field.appendChild(that.createCheckboxSection(fieldata));\n        };\n        \n        if(fieldata.subfields){\n            var subfieldWrapper = that.createSubFields(fieldata.subfields);\n\n            field.appendChild(subfieldWrapper);\n        }\n\n        return field;\n    },\n    createSubFields: function (subfields) {\n        // generate subfields\n        var that = this;\n        var subfieldWrapper = document.createElement('div');\n            subfieldWrapper.className = 'bform-subfield__holder';\n\n            subfields.forEach(function(subfield, index){\n                var subfieldHTML;\n\n                if(subfield.type === 'text' || subfield.type === 'email' || subfield.type === 'tel'){\n                    subfieldHTML = that.createSubTextField(subfield);\n                }else if(subfield.type === \"select\"){\n                    subfieldHTML = that.createSubSelectField(subfield);\n                }   \n                \n                if(subfieldHTML){\n                    subfieldWrapper.appendChild(subfieldHTML);\n                }\n            })\n        return subfieldWrapper;\n    },\n    createWrapper: function (fieldata) {\n        // create the wrapper for text field\n        var wrapper = document.createElement('li');\n        wrapper.className = \"bform-field__wrapper\";\n\n        if(fieldata.classNames){\n            wrapper.className = wrapper.className + ' ' + fieldata.classNames;\n        }\n\n        return wrapper;\n    },\n    createDescription: function(fieldata){\n        var description = document.createElement('p');\n        description.className = 'bform-field__dek';\n        description.textContent = fieldata.description;\n\n        return description;\n    },\n    createLabel: function (fieldata) {\n        // create field label\n        var label = document.createElement('label');\n        label.className = \"bform-field__label\";\n        label.for = fieldata.name;\n        label.innerHTML= (fieldata.label) ? fieldata.label : fieldata.name;\n\n        if(fieldata.required){\n            var span = document.createElement('span');\n            span.className = \"bform-field__label-required\"\n            span.innerHTML= \"*\";\n            label.appendChild(span);\n        }   \n        return label;\n    },\n    createInputField: function (fieldata){\n        var input = document.createElement('input');\n        input.type = fieldata.type;\n        input.name = fieldata.name;\n        input.required = fieldata.required;\n        if(fieldata.placeholder){\n            input.placeholder = fieldata.placeholder;\n        }\n        if(fieldata.uid){\n            input.id = fieldata.uid;\n        }\n        input.className = 'bform-field__input';\n\n        if(fieldata.relation && fieldata.relation.type === 'confirm'){\n            validateForm.initConfirm(input, fieldata.relation.target);\n        }\n\n        if(fieldata.type === 'email'){\n            validateForm.validateEmail(input);\n        }else if(fieldata.type === 'tel'){\n            validateForm.validatePhoneNumber(input);\n        }\n        \n        return input;\n    },\n    createCheckboxSection: function (fieldata) {\n        // Create checkboxes field\n        var checkboxesHTML = document.createElement('div');\n        checkboxesHTML.className = 'bform-subfield__holder';\n        if(fieldata.options){\n            fieldata.options.forEach(function (option, index) {\n                // create checkbox for each options\n                var wrapper = document.createElement('label');\n                var checkboxHTML = document.createElement('input');\n                checkboxHTML.type = fieldata.type;\n                checkboxHTML.className = \"bform-checkbox\";\n                checkboxHTML.value = option.value;\n                checkboxHTML.name = fieldata.name;\n                checkboxHTML.selected = option.selected;\n\n                wrapper.appendChild(checkboxHTML);\n                wrapper.innerHTML += option.value;\n                wrapper.className = 'bform-checkbox__label';\n\n                checkboxesHTML.appendChild(wrapper);\n            })\n        }\n        return checkboxesHTML;\n    },\n    createSelectField: function (fieldata) {\n        // create the html for select field\n        var selectHTML = document.createElement('select');\n        var selectWrapper = document.createElement('div');\n        selectHTML.name = fieldata.name;\n        selectHTML.className = 'bform-select';\n        selectWrapper.className = 'bform-select__wrapper';\n        if(fieldata.required){\n            selectHTML.required = true;\n        }\n        if(fieldata.options){\n            fieldata.options.forEach(function (option, index) {\n                // create option tag \n                var optionHTML = document.createElement('option');\n                \n                if(option.label){\n                    optionHTML.innerHTML = option.label;\n                }else{\n                    optionHTML.innerHTML = option.value;\n                }\n                optionHTML.value = option.value;\n\n                if(option.selected){\n                    optionHTML.selected = true;\n                }\n                selectHTML.appendChild(optionHTML);\n            })\n            selectWrapper.appendChild(selectHTML);\n        }\n\n        if(fieldata.relation && fieldata.relation.type === 'update'){\n            validateForm.initUpdateRelation(selectHTML, fieldata.relation.target);\n        }else if(fieldata.relation && fieldata.relation.type === 'insert'){\n            validateForm.initInsertRelation(selectHTML, fieldata.relation.target);\n        }\n        return selectWrapper;\n    },\n    createSubTextField: function (subfieldata) {\n        // create sub text field\n        // label comes after input field\n        // TODO: need to consider responsive issue\n        var that = this;\n        var wrapper = document.createElement('span');\n        wrapper.className = 'bform-subfield__item';\n        if(subfieldata.className){\n            wrapper.className = wrapper.className + ' ' + subfieldata.className;\n        }\n        wrapper.appendChild(that.createInputField(subfieldata));\n        wrapper.appendChild(that.createLabel(subfieldata));\n\n        return wrapper;\n    }, \n    createSubSelectField: function(subfieldata){\n        var that = this;\n        var wrapper = document.createElement('span');\n        wrapper.className = 'bform-subfield__item';\n        wrapper.appendChild(that.createSelectField(subfieldata));\n        if(subfieldata.label){\n            wrapper.appendChild(that.createLabel(subfieldata));\n        }\n\n        return wrapper;\n    }\n}\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/createTextField.js\n ** module id = 3\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/scripts/createTextField.js?");

/***/ },
/* 4 */
/***/ function(module, exports) {

	eval("module.exports = {\n    validatePhoneNumber: function(elem){\n        var errorMsg = this.fieldErrorMsg('Please enter a valid phone number. It should contains 10 digits and starts with your area code only.');\n\n        elem.addEventListener('blur', function(){\n            var phoneRegex = new RegExp('(\\\\d{3})(\\\\d{3})(\\\\d{4})');\n            var number = this.value;\n            number = number.replace(/[_\\W]+/g, '');\n            var length = number.length;\n            \n            if(phoneRegex.test(number)){\n                this.value = number.replace(phoneRegex, \"$1-$2-$3\");\n                if(elem.classList.contains('invalid')){\n                    elem.classList.remove('invalid');\n                    elem.parentNode.removeChild(errorMsg);\n                    if(document.getElementsByClassName('invalid').length < 1){\n                        document.getElementById('submit').setAttribute('disabled', false);\n                    }\n                }\n            }else{\n                if (!elem.classList.contains('invalid')) {\n                    elem.classList.add('invalid');\n                    elem.parentNode.appendChild(errorMsg);\n                    document.getElementById('submit').setAttribute('disabled', true);\n                };\n            }\n            \n        })\n    },\n    validateEmail: function (elem) {\n        // Check email input against email format\n        var emailRegex = new RegExp(\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$\");\n        var that = this;\n        var errorMsg = that.fieldErrorMsg('This is not a valid email address.');\n\n        elem.addEventListener('blur', function(e){\n            var parent = elem.parentNode;\n\n            if(!emailRegex.test(this.value)){\n                if (!this.classList.contains('invalid')){\n                    this.classList.add('invalid');\n                    parent.appendChild(errorMsg);\n                    document.getElementById('submit').setAttribute('disabled', true);\n                };\n            }else{\n                if (this.classList.contains('invalid')) {\n                    this.classList.remove('invalid');\n                    parent.removeChild(errorMsg);\n                    if(document.getElementsByClassName('invalid').length < 1){\n                        document.getElementById('submit').setAttribute('disabled', false);\n                    }\n                };\n            }\n        })\n    },\n    initUpdateRelation: function(elem, targetID){\n        var that = this;\n\n        elem.addEventListener('change', function(e){\n            var targetElem = document.getElementById(targetID);\n            var targetLabel = targetElem.parentNode.getElementsByTagName('label')[0];\n\n            targetLabel.firstChild.nodeValue = this.value\n\n            targetElem.name = this.value;\n        })\n    },\n    initInsertRelation: function (elem, target) {\n        // Show/hide subfields according to select value\n        // This funciton assumes that it always starts at 0\n        var that = this;\n\n        elem.addEventListener('change', function (e) {\n            var targetElems = that.getTargets(target);\n            var value = this.value;\n\n            for (var i = 0; i < targetElems.length; i++) {\n                if (i < value) {\n                    if(targetElems[i].classList.contains('hide')){\n                        targetElems[i].classList.remove('hide');\n                    }\n                }else{\n                    if(!targetElems[i].classList.contains('hide')){\n                        targetElems[i].classList.add('hide');\n                    }\n                }\n            };\n        })   \n    },\n    initConfirm: function(elem, targetID){\n        var that = this;\n        var errorMsg = that.fieldErrorMsg('These two fields don\\'t match.');\n\n        elem.addEventListener('blur', function(e){\n\n            var inputValue = this.value;\n            var targetElem = document.getElementById(targetID);\n            var targetValue = targetElem.value;\n            var parentElem = that.getClosest(elem, '.bform-subfield__holder');\n\n            if(inputValue.toLowerCase() === targetValue.toLowerCase()){\n                // If input matches target input, remove all invalid states\n                if(this.classList.contains('invalid')){\n                    this.classList.remove('invalid');\n                    targetElem.classList.remove('invalid');\n\n                    parentElem.removeChild(errorMsg);\n                }\n            }else{\n                if(!this.classList.contains('invalid')){\n                    this.classList.add('invalid');\n                    targetElem.classList.add('invalid');\n                }\n                \n                parentElem.appendChild(errorMsg);\n            }\n        })\n    },\n    fieldErrorMsg: function (message) {\n        // construct field error message\n        var msg = document.createElement('p');\n        msg.textContent = message;\n        msg.className = 'bform-errorMsg';\n\n        return msg;\n    },\n    getTargets: function (selector) {\n        // Get targets by given selector\n        var firstChar = selector.charAt(0);\n\n        if(firstChar === '.'){\n            return document.getElementsByClassName(selector.substr(1));\n        }else if(firstChar === '#'){\n            return document.getElementById(selector.substr(1));\n        }\n\n        return false;\n    },\n    getClosest: function (elem, selector) {\n        var firstChar = selector.charAt(0);\n\n        // Get closest match\n        for( ; elem && elem !== document; elem = elem.parentNode){\n            if (firstChar === '.') {\n            // matching classname\n                if (elem.classList.contains(selector.substr(1))){\n                    return elem;\n                } \n            };\n\n            // If matching Id\n            if (firstChar === '#') {\n                if (elem.id === selector.substr(1)) {\n                    return elem;\n                };\n            };\n\n            // If selector is a data attribute\n            if ( firstChar === '[' ) {\n                if ( elem.hasAttribute( selector.substr(1, selector.length - 2) ) ) {\n                    return elem;\n                }\n            }\n\n            // If selector is a tag\n            if ( elem.tagName.toLowerCase() === selector ) {\n                return elem;\n            }\n\n        }\n        \n        return false;\n    }\n}\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/validateForm.js\n ** module id = 4\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/scripts/validateForm.js?");

/***/ }
/******/ ]);